import asyncio
import aiogram
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import random
from datetime import datetime 
import sqlite3
import google.generativeai as genai

bot = Bot(token="6810377873:AAGtTn8CUrwtzqAXiMp9Q8uDJrjotOt9G7s")
dp = Dispatcher()

genai.configure(api_key="AIzaSyA-X1rDXanqHpoL3tJ96V7CCMK1rHJh7Mg")
model = genai.GenerativeModel("gemini-1.5-flash")
history = ["Chat history:",]
role = None
def gemini_send(g_input, message):
     history.append(f"{g_input}")
     response = model.generate_content(f"@{g_input}  {history}  {role} (–º–∞–∫—Å–º—É–º 150 —Å–ª–æ–≤). –¥–∞—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ –ª–µ–∫—Å–∏–∫–∏ –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö")
     print(response.text)
     history.append("You responsed:" + response.text)
     return response.text

quotes = ['–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥—Ä—É–∂–∏—Ç–µ —Å —Ç–µ–º–∏, –∫—Ç–æ –ª—É—á—à–µ –≤–∞—Å. –ë—É–¥–µ—Ç–µ –º—É—á–∏—Ç—å—Å—è, –Ω–æ —Ä–∞—Å—Ç–∏.',
             '–¢—ã ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å. –¢—ã ‚Äî —ç—Ç–æ —Ç–≤–æ–π –≤—ã–±–æ—Ä. –¢–æ—Ç, –≤ –∫–æ–≥–æ —Å–µ–±—è –ø—Ä–µ–≤—Ä–∞—Ç–∏—à—å.',
             '–ö–µ–º –±—ã —Ç—ã –Ω–∏ –±—ã–ª ‚Äî –±—É–¥—å –ª—É—á—à–µ.',
             '–ù–∞–≤–µ—Ä–Ω–æ–µ, –Ω–∏–∫–æ–≥–æ –Ω–µ–ª—å–∑—è –Ω–∞—Å–∏–ª—å–Ω–æ –∑–∞—Å—Ç–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω —Å–∞–º –æ–± —ç—Ç–æ–º –ø—Ä–æ—Å–∏—Ç. –í –∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤, –µ—Å–ª–∏ —Ç—ã —Å–æ–∑—Ä–µ–ª, —Ç–æ —Å–º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –∏ –±–µ–∑ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –ø–æ–º–æ—â–∏, —Å–∞–º.',
             '–£–º–µ—é—â–∏–π —É–ø—Ä–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–∏–º–∏ —Å–∏–ª–µ–Ω, –Ω–æ —É–º–µ—é—â–∏–π –≤–ª–∞–¥–µ—Ç—å —Å–æ–±–æ–π –µ—â—ë —Å–∏–ª—å–Ω–µ–µ.',
             '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∂–∏—Ç—å –ª—É—á—à–µ, —á–µ–º –ø—Ä–æ–≤–æ–¥—è –∂–∏–∑–Ω—å –≤ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–µ–µ.',
             '–ß–µ–ª–æ–≤–µ–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç –∂–∏—Ç—å –ª–∏—à—å —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –µ–º—É —É–¥–∞–µ—Ç—Å—è –ø—Ä–µ–≤–∑–æ–π—Ç–∏ —Å–∞–º–æ–≥–æ —Å–µ–±—è.',
             '–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, —Å—Ç–æ—è—â–∏–π –Ω–∞ —Ç–≤–æ—ë–º –ø—É—Ç–∏, ‚Äî —ç—Ç–æ —Ç—ã —Å–∞–º–∞.',
             '–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ —Å–≤–æ–∏–º –º—ã—Å–ª—è–º, –æ–Ω–∏ ‚Äî –Ω–∞—á–∞–ª–æ –ø–æ—Å—Ç—É–ø–∫–æ–≤.',
             '–ù—É–∂–Ω–æ –±—ã—Ç—å –ª—É—á—à–µ, —á–µ–º –≤—á–µ—Ä–∞, –∞ –Ω–µ –ª—É—á—à–µ, —á–µ–º –¥—Ä—É–≥–∏–µ. –•–æ—Ç—å —ç—Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∂–∏–∑–Ω–∏ –∏ –Ω–µ —Å–∞–º–∞—è –ª–µ–≥–∫–∞—è, –∑–∞—Ç–æ —Å–∞–º–∞—è –±–µ—Å–ø—Ä–æ–∏–≥—Ä—ã—à–Ω–∞—è...',
             '–ö–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç –≤–æ–π–Ω—É —Å —Å–∞–º–∏–º —Å–æ–±–æ–π, –æ–Ω —É–∂–µ —á–µ–≥–æ-—Ç–æ –¥–∞ —Å—Ç–æ–∏—Ç.',
             '–ü–æ—Ö–æ–∂–µ, —Ç—ã –º–µ—á—Ç–∞–µ—à—å —Å–±–µ–∂–∞—Ç—å –æ—Ç –æ–±—ã—á–Ω–æ–π –∂–∏–∑–Ω–∏, –Ω–æ –∂–∏–∑–Ω—å –≤ –¢–æ–∫–∏–æ –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ –ø–æ–ª–≥–æ–¥–∞ —Ç–æ–∂–µ —Å—Ç–∞–Ω–µ—Ç –æ–±—ã—á–Ω–æ–π. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–æ–≤—ã—Ö –æ—â—É—â–µ–Ω–∏–π, —Ç–æ –ª—É—á—à–µ –ø–æ–¥–∞—Ç—å—Å—è –≤ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω—É –∏–ª–∏ –∂–µ –≤–ª–µ–∑—Ç—å –≤–æ —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ–µ. –ù–æ –¥–∞–∂–µ —ç—Ç–æ —Å—Ç–∞–Ω–µ—Ç –æ–±—ã–¥–µ–Ω–Ω—ã–º –¥–Ω—è —á–µ—Ä–µ–∑ —Ç—Ä–∏. –ï—Å–ª–∏ –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å —Å–±–µ–∂–∞—Ç—å ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–π —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è. –ò –Ω–µ–≤–∞–∂–Ω–æ, –≥–¥–µ —Ç–≤–æ—è —Ü–µ–ª—å, –≤—ã—à–µ –∏–ª–∏ –Ω–∏–∂–µ —Ç–µ–±—è. –ü—Ä–æ—Å—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω—å—é.',
             '–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—É–≥–∞–ª–æ –º–µ–Ω—è, –≤–µ–¥—å —ç—Ç–æ –ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è, –∞ —É—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ –≤–æ –º–Ω–µ –∂–∏–≤–µ—Ç –º–µ–ª–∫–∏–π —ç–≥–æ–∏—Å—Ç, —Ç–æ —è –æ—Å–æ–±–æ —Ü–µ–Ω—é —ç—Ç–æ –≤—Ä–µ–º—è, –≤—Ä–µ–º—è —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è –∏ —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è.',
             '–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Å—Ç–∞—Ç—å —É–º–Ω–µ–µ ‚Äî –∏–≥—Ä–∞—Ç—å —Å –±–æ–ª–µ–µ —É–º–Ω—ã–º –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–º.',
             '–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å, —Ç–æ –í—ã –¥–æ–ª–∂–Ω—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—ë –º—ã—à–ª–µ–Ω–∏–µ.',
             '–õ—É—á—à–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –æ–±—â–µ—Å—Ç–≤–µ –ª—é–¥–µ–π –ª—É—á—à–∏—Ö, —á–µ–º –≤—ã —Å–∞–º–∏‚Ä¶ –í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫–æ–º—ã—Ö, —á—å–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ª—É—á—à–µ, —á–µ–º –≤–∞—à–µ, –∏ –≤—ã —É—Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –≤ —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏.',
             '–°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è ‚Äì –∑–Ω–∞—á–∏—Ç –º–µ–Ω—è—Ç—å—Å—è, –±—ã—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–º ‚Äì –∑–Ω–∞—á–∏—Ç –º–µ–Ω—è—Ç—å—Å—è —á–∞—Å—Ç–æ.',
             '–ñ–∏–∑–Ω—å ‚Äî —ç—Ç–æ —Ä–∏—Å–∫. –¢–æ–ª—å–∫–æ –ø–æ–ø–∞–¥–∞—è –≤ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –º—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞—Å—Ç–∏. –ò –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –º–æ–∂–µ–º –æ—Ç–≤–∞–∂–∏—Ç—å—Å—è, ‚Äî —ç—Ç–æ —Ä–∏—Å–∫ –ø–æ–ª—é–±–∏—Ç—å, —Ä–∏—Å–∫ –æ–∫–∞–∑–∞—Ç—å—Å—è —É—è–∑–≤–∏–º—ã–º, —Ä–∏—Å–∫ –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ –æ—Ç–∫—Ä—ã—Ç—å—Å—è –ø–µ—Ä–µ–¥ –¥—Ä—É–≥–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º, –Ω–µ –±–æ—è—Å—å –Ω–∏ –±–æ–ª–∏, –Ω–∏ –æ–±–∏–¥.',
             '–î–∞–∂–µ —Ä–∞–∑—É–º–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –±—É–¥–µ—Ç –≥–ª—É–ø–µ—Ç—å, –µ—Å–ª–∏ –æ–Ω –Ω–µ –±—É–¥–µ—Ç —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è.',
             '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞–¥–æ –¥–µ–ª–∞—Ç—å –¥–µ–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±—è –ø—É–≥–∞–µ—Ç.',
             '–õ–∏–±–æ –≤—ã –ø–æ–¥–Ω–∏–º–∏—Ç–µ—Å—å –≤–≤–µ—Ä—Ö –Ω–∞ –æ–¥–Ω—É —Å—Ç—É–ø–µ–Ω—å —Å–µ–≥–æ–¥–Ω—è, –∏–ª–∏ —Å–æ–±–µ—Ä–∏—Ç–µ—Å—å —Å —Å–∏–ª–∞–º–∏, —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Å—Ç—É–ø–µ–Ω—å –∑–∞–≤—Ç—Ä–∞.',
             ]

@dp.message(Command('roles'))
async def airole(message: types.Message):
    await message.answer(f"Thinker Role: \n {role}")
@dp.message(lambda message: message.text.startswith('!role'))
async def setrole(message: types.Message):
    global history
    global role
    history = ["Chat History:"]
    role = message.text[5:]
    await message.answer(f'Role: \n {role} \n setted up ')
@dp.message(Command('quote', 'start', '—Ü–∏—Ç–∞—Ç–∞'))
async def start(message: types.Message):
    quote = random.choice(quotes)
    response = model.generate_content(f" –æ—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ –∏ —è—Å–Ω–æ")
    await message.reply(quote)
@dp.message(Command('help'))
async def quote(message: types.Message):
    await message.reply("_–ö–æ–º–º–∞–Ω–¥—ã_ \n /start /quote /—Ü–∏—Ç–∞—Ç–∞ - —Ü–∏—Ç–∞—Ç—ã \n /news - –Ω–æ–≤–æ—Å—Ç–∏ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π \n /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –±–æ—Ç–µ", parse_mode="Markdown")


@dp.message(Command('cleanhistory'))
async def cleanchat(message: types.Message):
    global history
    history = ["Chat History:"]
    await message.answer("Chat history cleaned.")


@dp.message(lambda message: message.text.startswith(("!", "/")))
async def gemini_pull(message):
     userinfo = message.from_user.username
     print(userinfo)
     g_input = f"@{userinfo}: {message.text[1:]}"
     answer = gemini_send(g_input, message)
     await message.reply(answer)


@dp.message(Command('news'))
async def news(message: types.Message):
    await message.answer(""" 
    *–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –û–±–Ω–æ–≤—ã*: \n 
    _version 0.5_
    1. *–£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞* 
    2. #empty 
    3. #empty
    
    """, parse_mode = "Markdown")


@dp.message(Command('ban'))
async def ban(message: types.Message):
    if message.reply_to_message:
        replyeduser = message.reply_to_message.from_user
        username = replyeduser.username
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–±–∞–Ω–µ–Ω")
    else:
        print('—É —á–µ–ª–∞ –Ω–µ—Ç —é–∑')

@dp.message(Command('kiss'))
async def ban(message: types.Message):
    if message.reply_to_message:
        replyeduser = message.reply_to_message.from_user
        username = replyeduser.username
        ruser = message.from_user.username

        await message.answer(f"@{username} –ø–æ–ª—É—á–∏–ª –ø–æ—Ü–µ–ª—É–πüíã –æ—Ç @{ruser}")
    else:
        user = message.from_user
        uz = user.username
        await message.answer(f'@{uz} –ø–æ—Ü–µ–ª–æ–≤–∞–ª —Ç—É—Ç –≤—Å–µ—Ö!! @everyone')
        


@dp.message(Command('server')) 
async def ip(message: types.Message):
     await message.answer("DREIX.aternos.me:44838")



@dp.message(Command('shedule'))
async def sh(message: types.Message):
    at = message.from_user.username
    id = message.from_user.id
    # cur.execute("INSERT OR IGNORE ")
    await message.reply(f"—Ç–µ–±—è –∑–æ–≤—É—Ç {at}, id: {id}")

@dp.message(lambda message: message.chat.type == "private")
async def ls(message: types.Message):
    await bot.send_message(chat_id="6746608599", text=message.text)


    


async def sicle():
    while True:
        watch = datetime.now()
        if watch.hour == 23 and watch.minute == 24:
                   print('KABOOM')
                   a = '-1002339942344'
                   await bot.send_message(chat_id=a, text="–ò—Ç–æ–≥–∏ –¥–Ω—è: \n–°—É–ª—Ç–∞–Ω 102 –æ—á–∫–∞ \n–†–∏–∑–∞—Ç 0 \n–†–∞—Ñ–∏–∫ 0")
                   await asyncio.sleep(60)
        await asyncio.sleep(2)



async def main():
     await asyncio.gather(
         sicle(),
         dp.start_polling(bot))

if __name__ == '__main__':
    asyncio.run(main())
